{"version":3,"sources":["context.js","img/sprite.svg","todo/todoItem.js","todo/todoList.js","loader/loader.js","loader/loaderText.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","className","join","type","id","checked","title","onClick","bind","width","height","href","sprite","TodoList","props","todos","map","onTogle","style","display","justifyContent","alignItems","margin","TodoAddItem","lazy","Promise","resolve","setTimeout","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6031c51.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","export default __webpack_public_path__ + \"static/media/sprite.bf710cac.svg\";","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\nimport sprite from \"../img/sprite.svg\";\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.completed) {\r\n    classes.push(\"done\");\r\n  }\r\n  return (\r\n    <li className=\"listItem\">\r\n      <label className={classes.join(\" \")}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={() => onChange(todo.id)}\r\n          checked={todo.completed}\r\n        />\r\n        <span></span>\r\n        <p>{index + 1}</p>&nbsp;\r\n        {todo.title}\r\n      </label>\r\n      <button className=\"button\" onClick={removeTodo.bind(null, todo.id)}>\r\n        <svg width=\"15px\" height=\"15px\">\r\n          <use href={sprite + \"#close\"}></use>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./todoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <ul className=\"list\">\r\n      {props.todos.map((todo, index) => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            index={index}\r\n            onChange={props.onTogle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onTogle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./loader.css\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"cssload-box-loading\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./loaderText.css\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \".5rem\",\r\n      }}\r\n    >\r\n      <div id=\"inTurnFadingTextG\">\r\n        <div id=\"inTurnFadingTextG_1\" className=\"inTurnFadingTextG\">\r\n          L\r\n        </div>\r\n        <div id=\"inTurnFadingTextG_2\" className=\"inTurnFadingTextG\">\r\n          o\r\n        </div>\r\n        <div id=\"inTurnFadingTextG_3\" className=\"inTurnFadingTextG\">\r\n          a\r\n        </div>\r\n        <div id=\"inTurnFadingTextG_4\" className=\"inTurnFadingTextG\">\r\n          d\r\n        </div>\r\n        <div id=\"inTurnFadingTextG_5\" className=\"inTurnFadingTextG\">\r\n          i\r\n        </div>\r\n        <div id=\"inTurnFadingTextG_6\" className=\"inTurnFadingTextG\">\r\n          n\r\n        </div>\r\n        <div id=\"inTurnFadingTextG_7\" className=\"inTurnFadingTextG\">\r\n          g\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useEffect} from \"react\";\nimport Context from \"./context\";\nimport TodoList from \"./todo/todoList\";\nimport Loader from \"./loader/loader\";\nimport TextLoader from \"./loader/loaderText\";\n\n\nconst TodoAddItem = React.lazy(()=> {\n  return new Promise((resolve)=>{\n    setTimeout(() => {\n      resolve(import('./todo/todoAddItem'))\n    }, 3000);\n  })\n})\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n    .then(response => response.json())\n    .then(todos => {\n      setTimeout(() => {\n        setTodos(todos)\n        setLoading(false)\n      }, 2000);\n    })\n  }, [])\n\n  const toggleTodo = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  };\n\n  const removeTodo = (id) => {\n    setTodos(\n      todos.filter((todo) => {\n        return todo.id !== id;\n      })\n    );\n  };\n\n  const addTodo = (title) =>{\n    setTodos(todos.concat([\n      { title : title,\n        id : Date.now(),\n        completed: false\n      }\n    ]))\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo: removeTodo }}>\n      {loading ? (<Loader /> ): (<div className=\"wrapper\">\n        <h1 className='header'>Todo List</h1>\n        <React.Suspense fallback={<TextLoader />}>\n        <TodoAddItem onCreate={addTodo}/>\n        </React.Suspense>\n        {todos.length ? (<TodoList todos={todos} onTogle={toggleTodo} />) : (loading ? null : <p>no data!</p>)}\n      </div>)}\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}